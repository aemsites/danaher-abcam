/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2022 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.

* Adobe permits you to use and modify this file solely in accordance with
* the terms of the Adobe license agreement accompanying it.
*************************************************************************/

class t{_metadata;_type;_payload;_target;_currentTarget;constructor(t,s,e){this._metadata=e,this._payload=t,this._type=s}get type(){return this._type}get payload(){return this._payload}get metadata(){return this._metadata}get target(){return this._target}get currentTarget(){return this._currentTarget}get isCustomEvent(){return!1}payloadToJson(){return this.payload}toJson(){return{payload:this.payloadToJson(),type:this.type,isCustomEvent:this.isCustomEvent}}toString(){return JSON.stringify(this.toJson())}}class s extends t{constructor(t,s=!1){super(t,"change",{dispatch:s})}withAdditionalChange(t){return new s(this.payload.changes.concat(t.payload.changes),this.metadata)}}class e extends t{constructor(t={}){super(t,"invalid",{})}}class r extends t{constructor(t={}){super(t,"valid",{})}}class c extends t{constructor(t={},s=!1){super(t,"executeRule",{dispatch:s})}}const a=(t,e,r)=>new s({changes:[{propertyName:t,currentValue:e,prevValue:r}]});class n extends t{constructor(t,s=!1){super(t,"initialize",{dispatch:s})}}class o extends t{constructor(){super({},"load",{dispatch:!1})}}class u extends t{constructor(t,s=!1){super(t,"click",{dispatch:s})}}class d extends t{constructor(t,s=!1){super(t,"blur",{dispatch:s})}}class p extends t{constructor(t,s=!1){super(t,"validationComplete",{dispatch:s})}}class i extends t{constructor(){super({},"focus",{dispatch:!1})}}class l extends t{constructor(t,s=!1){super(t,"submit",{dispatch:s})}}class h extends t{constructor(t,s=!1){super(t,"save",{dispatch:s})}}class x extends t{constructor(t,s=!1){super(t,"submitSuccess",{dispatch:s})}}class g extends t{constructor(t,s=!1){super(t,"submitFailure",{dispatch:s})}}class m extends t{constructor(t,s=!1){super(t,"submitError",{dispatch:s})}}class y extends t{constructor(t,s=!1){super(t,"reset",{dispatch:s})}}class _ extends t{constructor(t,s){super({field:s,changes:t},"fieldChanged")}}class v extends t{constructor(t,s={},e=!1){super(s,t,{dispatch:e})}get isCustomEvent(){return!0}}class C extends t{constructor(t){super(t,"addItem")}}class b extends t{constructor(t){super(t,"removeItem")}}class E extends t{constructor(t){super(t,"addInstance")}}class J extends t{constructor(t){super(t,"removeInstance")}}export{E as AddInstance,C as AddItem,d as Blur,s as Change,u as Click,v as CustomEvent,c as ExecuteRule,_ as FieldChanged,i as Focus,o as FormLoad,n as Initialize,e as Invalid,J as RemoveInstance,b as RemoveItem,y as Reset,h as Save,l as Submit,m as SubmitError,g as SubmitFailure,x as SubmitSuccess,r as Valid,p as ValidationComplete,a as propertyChange};
